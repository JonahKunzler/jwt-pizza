name: Deploy Frontend to S3

on:
  push:
    branches:
      - main  # Trigger deployment when pushing to main
  workflow_dispatch:  # Allow manual triggering

permissions:
  id-token: write  # Required for OIDC authentication
  contents: read   # Read repo contents

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.package-version.outputs.version }}  # Capture the package version
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Capture package version
        id: package-version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Update dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Needed for OIDC authentication
    env:
      version: ${{ needs.build.outputs.version }}  # Use captured version
    steps:
      - name: Create OIDC token to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}

      - name: Download dist artifact
        uses: actions/download-artifact@v4
        with:
          name: package
          path: dist/

      - name: Push to AWS S3
        run: |
          echo Deploying version $version
          aws s3 cp dist s3://${{ secrets.APP_BUCKET }} --recursive
          aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"
          cp dist/index.html dist/404.html

