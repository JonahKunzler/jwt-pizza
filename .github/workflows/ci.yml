name: CI Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.set_version.outputs.version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: Set version
        id: set_version
        run: |
          version=$(date +'%Y%m%d.%H%M%S')
          echo "version=$version" >> "$GITHUB_OUTPUT"
          printf '{"version": "%s" }' "$version" > public/version.json

      - name: Build
        run: |
          npm ci && npm run build
          cp dist/index.html dist/404.html

      - name: Verify dist directory
        run: |
          ls -la dist/ || echo "Error: dist/ directory not found!"

      - name: Upload pages artifact
        uses: actions/upload-artifact@v4  # Switch to upload-artifact@v4 for consistency
        with:
          name: pages-artifact
          path: dist/
          if-no-files-found: error  # Fail if no files are found to upload

  deploy:
    needs: build
    permissions:
      id-token: write  # Required for AWS OIDC authentication
    runs-on: ubuntu-latest
    env:
      version: ${{ needs.build.outputs.version }}  # Passes the version from the build job
    environment:
      name: staging
      url: https://stage-pizza.byucsstudent.click
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: pages-artifact
          path: dist/

      - name: Verify downloaded artifact
        run: |
          ls -la dist/ || echo "Error: Artifact download failed!"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          audience: sts.amazonaws.com
          aws-region: us-east-1
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT }}:role/${{ secrets.CI_IAM_ROLE }}

      - name: Deploy to AWS S3
        run: |
          echo "Deploying version $version to S3"
          aws s3 cp dist s3://${{ secrets.APP_BUCKET }}/$version --recursive
          # aws s3 sync dist/ s3://${{ secrets.APP_BUCKET }}/ --delete
          # aws cloudfront create-invalidation --distribution-id ${{ secrets.DISTRIBUTION_ID }} --paths "/*"

  release:
    needs:
      - build
      - deploy
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Required for creating releases
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: ncipollo/release-action@2c591bcc8ecdcd2db72b97d6147f871fcd833ba5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: v${{ needs.build.outputs.version }}
          name: Release v${{ needs.build.outputs.version }}
          body: |
            ## ðŸš€ Changes

            ${{ github.event.head_commit.message }}

            **Commit**: ${{ github.sha }}
            **Version**: ${{ needs.build.outputs.version }}
            **Deployed to**: S3 bucket ${{ secrets.APP_BUCKET }}
          makeLatest: true
